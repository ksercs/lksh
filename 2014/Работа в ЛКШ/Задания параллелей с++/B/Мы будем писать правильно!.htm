<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0041)https://ejudge.lksh.ru/B/formatting3.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <title>Мы будем писать правильно!</title>
   


   <style type="text/css">
      h3 { text-indent : 2em;
           color : #003;
           margin : 0px;
         }

      h2 { color : #900;
           font-family : Arial;
           font-weight : normal;
           padding : 10px 0px;
           margin : 0px;
         }

      ul { font-size : 12pt;
           font-family : "Timew New Roman";
         }
   </style>

<!-- Include required JS files -->
<script type="text/javascript" src="./Мы будем писать правильно!_files/shCore.js"></script>
 
<!--
    At least one brush, here we choose JS. You need to include a brush for every 
    language you want to highlight
-->
<script type="text/javascript" src="./Мы будем писать правильно!_files/shBrushDelphi.js"></script>
<script type="text/javascript" src="./Мы будем писать правильно!_files/shBrushCpp.js"></script>
 
<!-- Include *at least* the core style and default theme -->
<link href="./Мы будем писать правильно!_files/shCoreDefault.css" rel="stylesheet" type="text/css">
<link href="./Мы будем писать правильно!_files/shThemeDefault.css" rel="stylesheet" type="text/css">
 
 
<!-- Finally, to actually run the highlighter, you need to include this JS on your page -->
<script type="text/javascript">
     SyntaxHighlighter.all()
</script>

</head>
<body>
   <h2>Обязательные правила форматирования кода:</h2>
<ul type="1">
   <li> Отступ <b>два или четыре</b> пробела. 
    <br><b><font color="red">Важное ПРИМЕЧАНИЕ:</font></b> если вы <b>выбрали</b> какой-либо отступ, то <b>соблюдайте его (и только его!) внутри документа</b>.
   </li><li> Вокруг знаков арифметических операций ставятся <b>пробелы</b>.
     <br><font color="red">Примечание:</font> Знаки <b>унарных</b> операций (например <font face="courier new">b := -a</font>) пробелами <b>не обособляются</b>.
   </li><li> Вокруг присваиваний ставятся <b>пробелы</b>.
   </li><li> Вокруг знаков логических операций (<font face="courier new"><b>and</b></font>, 
                                           <font face="courier new"><b>or</b></font>, 
                                           <font face="courier new"><b>xor</b></font>, 
                                           <font face="courier new">=</font> (в Паскале), 
                                           <font face="courier new">&amp;&amp;</font>, 
                                           <font face="courier new">||</font>, 
                                           <font face="courier new">^</font>, 
                                           <font face="courier new">==</font> (в Си), 
                                           <font face="courier new">&gt;</font>,
                                           <font face="courier new">&lt;=</font> и т.д.) ставятся <b>пробелы</b>.
   </li><li> Процедуры, функции и блоки описаний разделяются <b>пустыми строками</b>.
   </li><li> После запятой и двоеточия ставится <b>пробел</b>.
   </li><li> Между именем функции и скобками пробел <b>не ставится</b>, с внутренней стороны скобок пробел <b>не ставится</b>.
   </li><li> Каждый новый оператор должен находиться <b>в отдельной строке</b>.
   </li><li> Переменные разных типов объявляются в <b>разных строках</b>.
   </li><li> (Паскаль) Слово <b>var</b> должно быть в <b>отдельной строке</b>.
   </li><li> (Паскаль) Форматирование слова <b>type</b> такое же, как и слова <b>var</b>.
   </li><li> Пишите <b>имена переменных и функций (процедур) одинаково внутри документа</b> (например всегда с маленькой или всегда с большой буквы).
   </li><li> (Паскаль) <b>После операторов</b>, находящихся перед словом <b>end</b> точка с запятой ставится <b>ОБЯЗАТЕЛЬНО</b>.
</li></ul>
   <h2>Примеры правильно отформатированных программ:</h2>

<table width="100%" cellspacing="10" cellpadding="0" border="0">
<tbody><tr>
   <td width="50%"><h3>Паскаль:</h3></td>
   <td><h3>Си:</h3></td>
</tr>
<tr>

<td valign="top"><div>

<div><div id="highlighter_152198" class="syntaxhighlighter  delphi"><div class="toolbar"><span><a href="https://ejudge.lksh.ru/B/formatting3.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="delphi keyword">program</code> <code class="delphi plain">progsum;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="delphi color1">{$APPTYPE CONSOLE}</code></div><div class="line number4 index3 alt1"><code class="delphi plain">{</code><code class="delphi value">$R</code><code class="delphi plain">+,Q+}</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="delphi keyword">function</code> <code class="delphi plain">sum(a, b: </code><code class="delphi keyword">longint</code><code class="delphi plain">): </code><code class="delphi keyword">longint</code><code class="delphi plain">;</code></div><div class="line number7 index6 alt2"><code class="delphi keyword">begin</code></div><div class="line number8 index7 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">sum := a + b;</code></div><div class="line number9 index8 alt2"><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="delphi keyword">var</code></div><div class="line number12 index11 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">i, a, b, s: </code><code class="delphi keyword">longint</code><code class="delphi plain">;</code></div><div class="line number13 index12 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">x, y: </code><code class="delphi keyword">double</code><code class="delphi plain">;</code></div><div class="line number14 index13 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">arr: </code><code class="delphi keyword">array</code> <code class="delphi plain">[</code><code class="delphi value">1..1000</code><code class="delphi plain">] </code><code class="delphi keyword">of</code> <code class="delphi keyword">boolean</code><code class="delphi plain">;</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="delphi keyword">begin</code></div><div class="line number17 index16 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">assign(input, </code><code class="delphi string">'aplusb.in'</code><code class="delphi plain">);</code></div><div class="line number18 index17 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">reset(input);</code></div><div class="line number19 index18 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">assign(output, </code><code class="delphi string">'aplusb.out'</code><code class="delphi plain">);</code></div><div class="line number20 index19 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">rewrite(output);</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">read(a, b);</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi comments">{комментарий}</code></div><div class="line number25 index24 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">arr[</code><code class="delphi value">1</code><code class="delphi plain">] := </code><code class="delphi keyword">true</code><code class="delphi plain">;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">for</code> <code class="delphi plain">i := </code><code class="delphi value">2</code> <code class="delphi keyword">to</code> <code class="delphi value">1000</code> <code class="delphi keyword">do</code></div><div class="line number28 index27 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">if</code> <code class="delphi plain">((a &gt; </code><code class="delphi value">0</code><code class="delphi plain">) </code><code class="delphi keyword">and</code> <code class="delphi plain">(arr[i-</code><code class="delphi value">1</code><code class="delphi plain">])) </code><code class="delphi keyword">then</code></div><div class="line number29 index28 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">arr[i] := </code><code class="delphi keyword">true</code><code class="delphi plain">;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">for</code> <code class="delphi plain">i := </code><code class="delphi value">1</code> <code class="delphi keyword">to</code> <code class="delphi value">1000</code> <code class="delphi keyword">do</code></div><div class="line number32 index31 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">arr[i] := </code><code class="delphi keyword">false</code><code class="delphi plain">;</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">s := </code><code class="delphi value">0</code><code class="delphi plain">;</code></div><div class="line number35 index34 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">if</code> <code class="delphi plain">(a &lt; </code><code class="delphi value">0</code><code class="delphi plain">) </code><code class="delphi keyword">then</code> <code class="delphi keyword">begin</code></div><div class="line number36 index35 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">a := -a;</code></div><div class="line number37 index36 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">if</code> <code class="delphi plain">(b &lt; </code><code class="delphi value">0</code><code class="delphi plain">) </code><code class="delphi keyword">then</code> <code class="delphi keyword">begin</code></div><div class="line number38 index37 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">b := -b;</code></div><div class="line number39 index38 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := a + b;</code></div><div class="line number40 index39 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code> <code class="delphi keyword">else</code> <code class="delphi keyword">begin</code></div><div class="line number41 index40 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">while</code> <code class="delphi plain">(s &lt;= </code><code class="delphi value">0</code><code class="delphi plain">) </code><code class="delphi keyword">do</code> <code class="delphi keyword">begin</code></div><div class="line number42 index41 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">case</code> <code class="delphi plain">a </code><code class="delphi keyword">of</code></div><div class="line number43 index42 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi value">1</code><code class="delphi plain">: </code><code class="delphi keyword">begin</code></div><div class="line number44 index43 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := s + </code><code class="delphi value">3</code><code class="delphi plain">;</code></div><div class="line number45 index44 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number46 index45 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi value">2</code><code class="delphi plain">: </code><code class="delphi keyword">begin</code></div><div class="line number47 index46 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := s - </code><code class="delphi value">4</code><code class="delphi plain">;</code></div><div class="line number48 index47 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">a := a - </code><code class="delphi value">1</code><code class="delphi plain">;</code></div><div class="line number49 index48 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number50 index49 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">else</code></div><div class="line number51 index50 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := </code><code class="delphi value">1</code><code class="delphi plain">;</code></div><div class="line number52 index51 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number53 index52 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number54 index53 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number55 index54 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">end</code> <code class="delphi keyword">else</code> <code class="delphi keyword">if</code> <code class="delphi plain">(b &lt; </code><code class="delphi value">0</code><code class="delphi plain">) </code><code class="delphi keyword">then</code> <code class="delphi keyword">begin</code></div><div class="line number56 index55 alt1"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">b := -b;</code></div><div class="line number57 index56 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := (a + b) * (a - b);</code></div><div class="line number58 index57 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">end</code> <code class="delphi keyword">else</code> <code class="delphi keyword">begin</code></div><div class="line number59 index58 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="delphi plain">s := sum(a, b) * sum(a, b);</code></div><div class="line number60 index59 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">end</code><code class="delphi plain">;</code></div><div class="line number61 index60 alt2"><code class="delphi spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number62 index61 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi keyword">writeln</code><code class="delphi plain">(s);</code></div><div class="line number63 index62 alt2">&nbsp;</div><div class="line number64 index63 alt1"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">close(input);</code></div><div class="line number65 index64 alt2"><code class="delphi spaces">&nbsp;&nbsp;</code><code class="delphi plain">close(output);</code></div><div class="line number66 index65 alt1"><code class="delphi keyword">end</code><code class="delphi plain">.</code></div></div></td></tr></tbody></table></div></div>
</div>
</td>

<td valign="top">
<div>
<div><div id="highlighter_155311" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="https://ejudge.lksh.ru/B/formatting3.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">sum(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">b) {</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">a + b;</code></div><div class="line number5 index4 alt2"><code class="cpp plain">}</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc, </code><code class="cpp color1 bold">char</code><code class="cpp plain">** argv) {</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">b;</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">s;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp color1 bold">double</code> <code class="cpp plain">x, y;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">arr[1000];</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">freopen</code><code class="cpp plain">(</code><code class="cpp string">"aplusb.in"</code><code class="cpp plain">, </code><code class="cpp string">"r"</code><code class="cpp plain">, stdin);</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">freopen</code><code class="cpp plain">(</code><code class="cpp string">"aplusb.out"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">, stdout);</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%d%d"</code><code class="cpp plain">, &amp;a, &amp;b);</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">//комментарий</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">arr[0] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 1; i &lt; 1000; i++)</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">((a &lt; 0) &amp;&amp; (arr[i-1]))</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">arr[i] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 1000; i++)</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">arr[i] = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">s = 0;</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(a &lt; 0) {</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a = -a;</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(b &lt; 0) {</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">b = -b;</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = a + b;</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">(s &lt;= 0) {</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">switch</code> <code class="cpp plain">(a) {</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">case</code> <code class="cpp plain">1: </code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = s + 3;</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">case</code> <code class="cpp plain">2:</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = s - 4;</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a = a - 1;</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">default</code><code class="cpp plain">:</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = 1;</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code> <code class="cpp plain">(b &lt; 0) {</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">b = -b;</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = (a + b) * (a - b);</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s = sum(a, b) * sum(a, b);</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number56 index55 alt1">&nbsp;</div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d\n"</code><code class="cpp plain">, s);</code></div><div class="line number58 index57 alt1">&nbsp;</div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">fclose</code><code class="cpp plain">(stdin);</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp functions bold">fclose</code><code class="cpp plain">(stdout);</code></div><div class="line number61 index60 alt2">&nbsp;</div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number63 index62 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
</div>
</td> 
</tr> 
</tbody></table>

<!--
   <script language="JavaScript" type="text/javascript" src="code.js"> </script>
-->

</body></html>